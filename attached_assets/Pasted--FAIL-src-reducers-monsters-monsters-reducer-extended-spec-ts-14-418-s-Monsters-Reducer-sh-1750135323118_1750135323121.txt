 FAIL  src/reducers/monsters/monsters.reducer.extended.spec.ts (14.418 s)
  ● Monsters Reducer › should change the battle on action fulfilled
                                                                                                                                                                                                                                                                                              
    expect(received).toEqual(expected) // deep equality                                                                                                                                                                                                                                       
                                                                                                                                                                                                                                                                                              
    - Expected  - 0                                                                                                                                                                                                                                                                           
    + Received  + 3                                                                                                                                                                                                                                                                           
                                                                                                                                                                                                                                                                                              
      Object {                                                                                                                                                                                                                                                                                
    +   "tie": false,                                                                                                                                                                                                                                                                         
    +   "winner": Object {                                                                                                                                                                                                                                                                    
          "attack": 60,                                                                                                                                                                                                                                                                       
          "defense": 40,                                                                                                                                                                                                                                                                      
          "hp": 10,                                                                                                                                                                                                                                                                           
          "id": "monster-1",
          "imageUrl": "/images/dead-unicorn.png",
          "name": "Dead Unicorn",
          "speed": 80,
          "type": "Type",
    +   },
      }

      24 |     expect(newState.battles).toHaveLength(1);
      25 |     expect(newState.battles[0]).toEqual(battleResult);
    > 26 |     expect(newState.winner).toEqual(battleResult.winner);
         |                             ^
      27 |   });
      28 |
      29 |   it('should add the random monster to the state', () => {

      at Object.<anonymous> (src/reducers/monsters/monsters.reducer.extended.spec.ts:26:29)

  ● Monsters Reducer › should add the winner to the state

    expect(received).toEqual(expected) // deep equality

    - Expected  - 0
    + Received  + 3

      Object {
    +   "tie": false,
    +   "winner": Object {
          "attack": 90,
          "defense": 80,
          "hp": 90,
          "id": "monster-3",
          "imageUrl": "/images/red-dragon.png",
          "name": "Red Dragon",
          "speed": 70,
          "type": "Type",
    +   },
      }

      54 |     const newState = monstersReducer(initialState, action);
      55 |
    > 56 |     expect(newState.winner).toEqual(winner);
         |                             ^
      57 |     expect(newState.battles[0].winner).toEqual(winner);
      58 |   });
      59 |

      at Object.<anonymous> (src/reducers/monsters/monsters.reducer.extended.spec.ts:56:29)

  ● Monsters Reducer › should handle tie battles correctly

    expect(received).toEqual(expected) // deep equality

    - Expected  - 0
    + Received  + 3

      Object {
    +   "tie": true,
    +   "winner": Object {
          "attack": 60,
          "defense": 40,
          "hp": 10,
          "id": "monster-1",
          "imageUrl": "/images/dead-unicorn.png",
          "name": "Dead Unicorn",
          "speed": 80,
          "type": "Type",
    +   },
      }

      72 |
      73 |     expect(newState.battles[0].tie).toBe(true);
    > 74 |     expect(newState.winner).toEqual(battleResult.winner);
         |                             ^
      75 |   });
      76 |
      77 |   it('should load monsters data successfully', () => {

      at Object.<anonymous> (src/reducers/monsters/monsters.reducer.extended.spec.ts:74:29)

  ● Monsters Reducer › should handle multiple battles in sequence

    expect(received).toEqual(expected) // deep equality

    - Expected  - 0
    + Received  + 3

      Object {
    +   "tie": true,
    +   "winner": Object {
          "attack": 50,
          "defense": 20,
          "hp": 80,
          "id": "monster-2",
          "imageUrl": "/images/old-shark.png",
          "name": "Old Shark",
          "speed": 90,
          "type": "Type",
    +   },
      }

      139 |     expect(state.battles[0]).toEqual(firstBattle);
      140 |     expect(state.battles[1]).toEqual(secondBattle);
    > 141 |     expect(state.winner).toEqual(secondBattle.winner);
          |                          ^
      142 |   });
      143 | });
      144 |

      at Object.<anonymous> (src/reducers/monsters/monsters.reducer.extended.spec.ts:141:26)

(node:6620) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)
 PASS  src/components/monster-battle-card/MonsterBattleCard.extended.spec.tsx (45.391 s)
 PASS  src/components/winner-display/WinnerDisplay.spec.tsx (45.07 s)
(node:3952) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.                                                                                                                                                                     
(Use `node --trace-deprecation ...` to show where the warning was created)
(node:17000) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)
 PASS  src/components/monster-battle-card/MonsterBattleCard.spec.tsx (45.568 s)
(node:14796) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.                                                                                                                                                                    
(Use `node --trace-deprecation ...` to show where the warning was created)
 FAIL  src/components/winner-display/WinnerDisplay.extended.spec.tsx (50.874 s)
  ● WinnerDisplayExtended › renders empty text when no winner text is provided
                                                                                                                                                                                                                                                                                              
    expect(element).toHaveTextContent()                                                                                                                                                                                                                                                       
                                                                                                                                                                                                                                                                                              
    Expected element to have text content:                                                                                                                                                                                                                                                    
      wins!                                                                                                                                                                                                                                                                                   
    Received:                                                                                                                                                                                                                                                                                 
      wins!                                                                                                                                                                                                                                                                                   

      17 |     const textElement = container.querySelector('.MuiTypography-root');
      18 |     expect(textElement).toBeInTheDocument();
    > 19 |     expect(textElement).toHaveTextContent(' wins!');
         |                         ^
      20 |   });
      21 |
      22 |   it('renders tie message correctly', () => {

      at Object.<anonymous> (src/components/winner-display/WinnerDisplay.extended.spec.tsx:19:25)